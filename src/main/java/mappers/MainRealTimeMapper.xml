<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MainRealTimeReviewDao">

<select id="getReviewList" resultType="realtimeVO" parameterType="map">
	SELECT sub.*
	FROM (  SELECT m.M_ID, m.M_NAME, m.M_EMAIL, 
				   s.S_ID, s.S_NAME, s.S_EMAIL, s.S_SPNAME,
				   oi.O_CODE, oi.O_CONTENT, oi.O_DATE,
				   fo.FO_CODE, fo.FO_DATE, fo.FO_SUM, fo.FO_NUM, fo.FO_SIZE, fo.FO_ETC, fo.DELI_CODE,
				   p.P_CODE, p.P_DATE, p.PT_CODE, p.P_SUM, p.P_CK, p.P_CK_DATE,
				   r.RV_CODE, r.RV_CONTENT, r.RV_DATE, r.RV_LIKE, r.RV_STAR,
				   rp.RVP_PSIZE, rp.RVP_PNAME, rp.RVP_SPNAME,
				   ROW_NUMBER() OVER (ORDER BY r.RV_DATE DESC) AS rn
			FROM member m
				JOIN orderinfo oi ON m.M_ID = oi.M_ID
				JOIN store s ON oi.S_ID = s.S_ID
				JOIN final_order fo ON oi.O_CODE = fo.O_CODE
				JOIN pay p ON fo.FO_CODE = p.FO_CODE
				JOIN review r ON p.P_CODE = r.P_CODE
				JOIN review_photo rp ON r.RV_CODE = rp.RV_CODE) sub
	WHERE sub.rn BETWEEN #{firstNum} AND #{endNum}
</select>

<select id="getTotalCountPage" resultType="int">
	SELECT COUNT(*) AS cnt FROM review
</select>

<!-- reviewUpdate 실행(좋아요 업데이트) -->
<update id="updateLikeCount" parameterType="map">
	UPDATE review
	SET RV_LIKE = RV_LIKE + 1
	WHERE RV_CODE = #{reviewId}
</update>

<!-- getUpdatedLikes 실행(좋아요 업데이트 후 좋아요 조회) -->
<select id="getUpdatedLikes" resultType="int" parameterType="int">
	SELECT RV_LIKE FROM review
	WHERE RV_CODE = #{reviewId}
	ORDER BY RV_DATE DESC
</select>


</mapper>
